{:scalars
 {:ObjectId
  {:parse :scalars/parse-object-id
   :serialize :scalars/serialize-object-id}

  ; A non-empty string.
  :Name
  {:parse :scalars/parse-name
   :serialize :scalars/serialize-name}}

 :enums
 {:SubscriptionAction
  {:values [:RESET :UPDATE :DELETE]}}

 :objects
 {:Person
  {:fields {:id {:type (non-null ObjectId), :resolve :_id}
            :name {:type (non-null String)}
            :retired {:type Boolean}}}

  :Category
  {:fields {:id {:type (non-null ObjectId), :resolve :_id}
            :name {:type (non-null String)}
            :description {:type String}
            :retired {:type Boolean}}}

  :PersonEvent
  {:fields {:action {:type :SubscriptionAction}
            :docs {:type (list (non-null :Person))}   ; RESET, UPDATE
            :ids {:type (list (non-null ObjectId))}}}       ; DELETE

  :CategoryEvent
  {:fields {:action {:type :SubscriptionAction}
            :docs {:type (list (non-null :Category))}
            :ids {:type (list (non-null ObjectId))}}}}

  ;:Transaction
  ;{:fields
  ; {:id {:type (non-null ObjectId)}
  ;  :created_at {:type Int}
  ;  :updated_at {:type Int}
  ;  :date {:type String}
  ;  :category {:type :Category
  ;             :resolve :Transaction/category}
  ;  :title {:type String}
  ;  :description {:type String}
  ;  :tags {:type (list (non-null String))}
  ;  :splits {:type (list (non-null :Split))}}}

  ;:Template
  ;{:fields
  ; {:id {:type (non-null ObjectId)}
  ;  :category {:type :Category
  ;             :resolve :Template/Category}
  ;  :title {:type String}
  ;  :description {:type String}
  ;  :tags {:type (list (non-null String))}
  ;  :splits {:type (list (non-null :Split))}}}

  ;:Split
  ;{:fields
  ; {:person {:type :Person
  ;           :resolve :Split/person}
  ;  :amount Int}}

  ;:Total
  ;{:fields
  ; {:category {:type (non-null :Category)
  ;             :resolve :Total/category}
  ;  :person {:type (non-null :Person)
  ;           :resolve :Total/person}
  ;  :total {:type (non-null Int)}}}}

 :subscriptions
 {:people
  {:type :PersonEvent
   :stream :subscriptions/people}

  :categories
  {:type :CategoryEvent
   :stream :subscriptions/categories}}

  ;:transactions
  ;{:type (non-null (list (non-null :Transaction)))
  ; :args {}
  ; :resolve :queries/transactions}

  ;:templates
  ;{:type (non-null (list (non-null :Template)))
  ; :resolve :queries/templates}

  ;:totals
  ;{:type (non-null (list (non-null :Total)))
  ; :resolve :queries/totals}}}

 :mutations
 {:new_category
  {:args {:name {:type (non-null Name)}
          :description {:type String}}
   :type :Category
   :resolve :mutations/new-category}

  :update_category
  {:args {:id {:type (non-null ObjectId)}
          :name {:type Name}
          :description {:type String}
          :retired {:type Boolean}}
   :type :Category
   :resolve :mutations/update-category}

  :delete_category
  {:args {:id {:type (non-null ObjectId)}}
   :type ObjectId
   :resolve :mutations/delete-category}}}
